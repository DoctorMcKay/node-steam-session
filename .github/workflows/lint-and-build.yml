name: Test and Build

on: [ push, pull_request ]

jobs:
  test:
    runs-on: ubuntu-latest

    # Run for external PRs, but not on our own internal PRs as they'll be run by the push to the branch.
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != 'DoctorMcKay/node-steam-session'

    strategy:
      matrix:
        node-version: [ 12.x, 14.x, 16.x, 18.x ]

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules

      - name: npm install
        working-directory: .
        run: npm install --ignore-scripts

      - name: Run ESLint
        run: npm run lint

      - name: Run tests
        run: npm run test

  build:
    runs-on: ubuntu-latest

    # Run for external PRs, but not on our own internal PRs as they'll be run by the push to the branch.
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != 'DoctorMcKay/node-steam-session'

    strategy:
      matrix:
        node-version: [ 12.x ]

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules

      - name: npm install
        working-directory: .
        run: npm install --ignore-scripts

      - name: Run build
        run: npm pack

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: steam-session-*.tgz
